>>>>>>>>>>>>>>>>>>>>Class-1>>>>>>>>>>>>>>>>>>

History of Python:-

Python was Introduced by Guido Van Rossum in 1989.
First version of python released in 1991.
In 1994, Python 1.0 was released with new feature which are map, filter, lambda.
Python 2.X also add some more feature like comprehensions, garbage collection system 
After Python2.X Python3.X released in 2008.

Introduction Of Python:-

Python is an Interpreted ,high-level and object-oriented programming language and Python is also know as one of the most simplest programming language.

Python is a multi purpose programming language. Which broadly use in Game Development. Website Development, Scientific Calculation, Desktop Application Development, Data Science, big Data, Machine Learning and Artificial Intelligence.

Features Of Python:-

Easy to Learn and Implement
Open Source
Broad Standard Library
Cross Platform
Work on Interpreter Logic
Multi-Paradigm Language
Portable Programming Language
High Level Programming Language
Extendable Language
Expressive programming Language
GUI programming support

Application Of Python:-

Website and web application development 
Desktop Application
Games Development
Network Programming
Robotics
Data Analysis
Web Scraping
Scientific Calculation
Data Visualisation
Machine Learning and Artificial Intelligence
3D Application Development
Audio and Video software development

Who use Python?:-
Google
Netflix
Facebook
Youtube
NASA
Dropbox

>>>>>>>>>>>>>>>>>>>>Class-2>>>>>>>>>>>>>>

What is Operators?:-

Operators are special type of symbol that manipulate the values of operand.

print(1+3)
o/p->4
Where 1 and 4 are called operand and + is Operators.

Types Of Operators:-

Arithmetic Operators
Comparison (relational) Operators
Logical (boolean) Operators
Bitwise Operators
Assignment Operators
Special Operators

Arithmetic Operator:-

Arithmetic operators are use to perform mathematical operation like addition, substation, multiplication, division, modulus.

+   Perform addition operation             3+6=9
-   Perform substation operation           8-3=5
*   Perform multiplication operation       2*3=6
/   Perform float and integer division     4/2=2 and 5/2=2.5
%   Output of this operation is remainder of operand  3%2=1
//  Perform Integer Division(output of this operation in    Intger value)  3//2 = 1
**   Perform Power Operation               3**2=9 and 3**3=27


Comparison (Relational) Operators:-

Comparison (relational) Operators compare the value on the side and return the answer in True and False according to the condition.   

>     Greater than              a>b
<     Less than                 a<b
==    Equal to                  a==b
!=    not equal to              a!=b
>=    Greater than or equal to  a>=b
<=    Leass than or equal to    a<=b

Bitwise Operators:-

Bitwise operators work on bits and it operates bit by bit

For Example a = 5(00000101) and b = 8(00001000)

& Binary AND      Bitwise AND              a&b = 0
| Binary OR       Bitwise OR               a|b = 13
~ Binary NOT      Bitwise NOT(complement)  ~a = -6
 
OR Gate:-           
A           B         Output
0           0            0
0           1            1
1           0            1
1           1            1

AND Gate:-
A           B         Output
0           0            0
0           1            0
1           0            0
1           1            1

NOT Gate:-
A           B         Output
0           0            1
1           1            0

Assignment Operators:-

Assignment operators are for assign values to variables in Python.

=     Assigns values from right side operands to left side operand                                a = 10
+=    It adds right operand to the left operand and assign the result to left operand             a+=10 OR a = a+10
-=    It subtracts right operand from the left operand and assign the result to left operand      a-= 10 or a = a-10
*=     It multiplies right operand with the left operand and assign the result to  left operand   a*=10 or a= a*10
/=     It divides left operand and assign the result to left operand                              a/=10 or a = a/10
%=     It takes modulus suing two operands and assign the result to left operand                  a%=10 or a = a%10
**=    Performs exponential (power) calculation on operators and assign value to the left operand a**=b or a = b**a
//=    It performs floor division on operators and assign value to the left operand.              a//=b or a = a//b

Identity Operators:-

Identity Operators used for check location of two variables
on memory. If they are on same memory location than output is True otherwise output is False.
 
a = 5
b = 5

is            True if the operands are identical        a is b (True)
is not        False if the operands are not identical  a is not b (False)


Membership Operators:-

Membership operators use for test membership in a sequence like string, list, tuples.

a = 6
b = [1,2,3,4,5,6,7]
in          True if the test is pass       a in b (True)
not in      False if the test is fails     a not in b (False)


>>>>>>>>>>>>>>>>>>>Class-3>>>>>>>>>>>>>>>>>
Data Types in Python:-----
1#. Primitive Data Types
1. Number
2. String
2#. Non Primitive Data Types
3. List
4. Tuple
5. Dictionary
6. Set


Number->
Number data type store numeric values. Which are Integer, Float and complex

a = 5(integer)
b = 4.6(float)
c = 2+5j(complex)

print(type(a))
print(type(b))
print(type(c))

String-->
String is sequence of characters.
We can use string quotes or double quotes to represent strings.

Multi - line string can be denoted using triple quotes(""" """).

a = 'hello'
b = "hello"
c = """this is
          python
              Programming""")
print(a)
print(b)
print(c)


List:---

List is an ordered sequence of items. It is one of the most used datatype in python and is very flexible.

Declaring a list is pretty staight forward. Items separated by commas are enclosed within brackets[].

List is mutable, it's mean we can change value of an element in list.

a = [1,2,3,"python",7.8,-67,False]
print(a)
type(a)

Tuple:-

Tuple is an ordered sequence of items same as list.

The only difference is that tuples are immutable. Tuples once created cannot be modified.

Tuples are used to write-protect data and are usually faster than list as it cannot change dynamically.

It is defined within parentheses () where items are separated by commas.

a = (1,2,[34,56,7],1+9j)
print(a)
type(a)

Dictionary:-

Dictionary is an unordered collection of key-value pairs.

It is generally used when we have a huge amount of data. Dictionaries are optimised for retrieving data. We must know the key to retrieve the value.

In Python, dictionaries are defined within braces {} with each item being a pair in the form
key:value.
Key and value can be of any type.



SET:-

Set is an unordered collection of unique items. Set is defined by values separated by comma inside braces {} . Items in a set are not ordered.


